name: Build, Test, and Upload Python Package

on:
  push:
    branches:
      - main  # Run tests on push to main
  pull_request:
    branches:
      - main  # Run tests on pull requests to main
  release:
    types: [created]  # Only publish on tagged releases

jobs:
  test:
    name: Test on all platforms
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.11', '3.13']
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel pytest pyttsx3

      - name: Run tests
        run: |
          pytest --maxfail=5 --disable-warnings tests/ 

  build:
    runs-on: ubuntu-latest
    needs: [test]  # This ensures tests pass before deployment
    if: github.event_name == 'release' && github.event.action == 'created'  # Only on release creation
    permissions:
      id-token: write 

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Clean previous builds
        run: |
          rm -rf dist

      - name: Build package
        run: |
          python setup.py check
          python setup.py sdist bdist_wheel

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'created'  # Only on release creation
    
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_PASSWORD }}